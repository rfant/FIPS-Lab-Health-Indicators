TOOL_PATH="/home/vcap/app/.bp-config/Module_Active_Data"
RAW_DATA_PATH="/home/vcap/app/.bp-config/Module_Active_Data/active_cert_pull"
MY_BACKUP_PATH="/var/vcap/data/LHI/Module_Active_Data"

today=`date '+%m_%d_%Y'`;
LOG_FILENAME="$TOOL_PATH/results/$today.ACTIVE.log"

#reconnect the VPN so that I can access our CMVP Active table that's in our postgresql database
#echo "Reconnect VPN: " >> $LOG_FILENAME
#osascript -e "tell application \"/Applications/Tunnelblick.app\"" -e "connect \"RichardFant2020_ext\"" -e "end tell"
#wait 5 seconds for connection to complete
#sleep 5
echo "=================================================================================="

#remove todays log_file only just in case I am debugging
rm $LOG_FILENAME   

#clean out the Active Table for a fresh start. Should only use this for debugging purposes.
#$TOOL_PATH/delete_data_active_table   

i=1

for f in `ls $RAW_DATA_PATH/ | sort -n`
do
	
	echo "$i: Processing $RAW_DATA_PATH/$f file..."

  	$TOOL_PATH/active_to_sql $RAW_DATA_PATH/$f  >> $LOG_FILENAME
  	echo "$i: ################"   >> $LOG_FILENAME

	((i+=1))
done

#echo "Marking all dup rows in the CMVP_Active_Table. Plus create a clean_lab_name by using just the first word of the lab name since there are many spellings. Plus adding sunset date" 
$TOOL_PATH/Mark_Active_Table_Dups >> $LOG_FILENAME

# If I have any error messages in the log, I'll set a flag in the POSGRESQL dbase that will show as a warning in the LHI tool.
grep -q -i "error" $LOG_FILENAME && ./setActiveErrorFlag $today.ACTIVE.log



	